@inject Microsoft.AspNetCore.Identity.SignInManager<IdentityUser> _signInManager
<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] | Book Event App</title>
    <link href="~/lib/twitter-bootstrap/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Styles/StyleSheet.css" rel="stylesheet" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
            <div class="container-fluid">
                <a class="navbar-brand" asp-controller="Home" asp-action="Index">EventEase</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse justify-content-between" id="navbarNav">
                    <ul class="navbar-nav">
                        <li class="nav-item">
                            <a class="nav-link @(ViewData["ActivePage"] as String == "Home" ? "active" : "")" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        @if (_signInManager.IsSignedIn(User))

                        {
                            <li class="nav-item">
                                <a class="nav-link @(ViewData["ActivePage"] as String == "MyEvents" ? "active" : "")" asp-controller="Event" asp-action="MyEvents">My Events</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link @(ViewData["ActivePage"] as String == "EventsInvitedTo" ? "active" : "")" asp-controller="Event" asp-action="EventsInvitedTo">Events Invited To</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link @(ViewData["ActivePage"] as String == "CreateEvent" ? "active" : "")" asp-controller="Event" asp-action="CreateEvent">Create Event</a>
                            </li>
                        }
                    </ul>
                    <div class="d-flex">
                        @if (_signInManager.IsSignedIn(User))

                        {
                            <a class="btn btn-outline-light" asp-action="LogOut" asp-controller="Account">Logout</a>
                        }

                        else

                        {
                            <a class="btn btn-outline-light me-2" asp-controller="Account" asp-action="Login">Login</a>
                            <a class="btn btn-light" asp-controller="Account" asp-action="SignUp">Sign Up</a>
                        }
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <main class="container pb-3">
        @RenderBody()
    </main>
    <footer class="py-2">
        <p class="text-center text-white m-0">Life's too short for boring events—let's create something unforgettable!</p>
    </footer>
    <script src="~/JS/JavaScript.js"></script>
    <script src="~/lib/twitter-bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="https://kit.fontawesome.com/ed097eda64.js" crossorigin="anonymous"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
